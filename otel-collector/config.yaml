apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector
  namespace: otel
  labels:
    app: opentelemetry
    component: otel-collector
data:
  otel-collector-config: |
    receivers:
      opencensus:
        endpoint: 0.0.0.0:55678
    exporters:
      prometheus:
        endpoint: "0.0.0.0:8889"
        # namespace: load-generator-metrics
        # const_labels:
        #   app: load-generator
      logging:
      zipkin:
        endpoint: "http://zipkin-all-in-one.otel.svc.cluster.local:9411/api/v2/spans"
        format: proto
      jaeger:
        endpoint: jaeger-all-in-one.otel.svc.cluster.local:14250
        insecure: true
      # Alternatively, use jaeger_thrift_http with the settings below. In this case
      # update the list of exporters on the traces pipeline.
      #
      #  jaeger_thrift_http:
      #    url: http://jaeger-all-in-one.otel.svc.cluster.local:14268/api/traces
    processors:
      batch:
      queued_retry:
      tail_sampling:
        decision_wait: 10s
        num_traces: 100
        expected_new_traces_per_sec: 10
        policies:
          [
            {
              name: sampleNoErrors,
              type: numeric_attribute,
              numeric_attribute: {key: status.code, min_value: 0, max_value: 0}
            },
            {
              name: sample200,
              type: string_attribute,
              string_attribute: {key: http.status_code, values: ["200"]}
            },
            {
              name: ratelimit35,
              type: rate_limiting,
              rate_limiting: {spans_per_second: 35}
           }
          ]
    extensions:
      health_check:
      pprof:
        endpoint: :1888
      zpages:
        endpoint: :55679
    service:
      extensions: [pprof, zpages, health_check]
      pipelines:
        traces:
          receivers: [opencensus]
          exporters: [logging, zipkin, jaeger]
          processors: [batch, queued_retry]
        metrics:
          receivers: [opencensus]
          exporters: [logging,prometheus]
